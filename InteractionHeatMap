plot_interaction_heatmap <- function(model, data, var1, var2,
                                     n = 100,
                                     transform = log1p,
                                     scale_vars = TRUE,
                                     other_fixed = "mean") {
  
  message("Generating prediction grid for ", var1, " × ", var2)
  
  # Extract variable names used in model
  vars_in_model <- all.vars(formula(model))
  response_var <- as.character(formula(model)[[2]])
  fixed_vars <- setdiff(vars_in_model, c(response_var, "ID"))
  
  # Grid for var1 and var2
  var1_seq <- seq(max(0, min(data[[var1]], na.rm = TRUE)),
                  max(data[[var1]], na.rm = TRUE),
                  length.out = n)
  
  var2_seq <- seq(max(0, min(data[[var2]], na.rm = TRUE)),
                  max(data[[var2]], na.rm = TRUE),
                  length.out = n)
  
  grid <- expand.grid(
    var1_seq,
    var2_seq
  )
  names(grid) <- c(var1, var2)
  
  # Add other fixed variables at their mean
  for (v in setdiff(fixed_vars, c(var1, var2))) {
    grid[[v]] <- if (other_fixed == "mean") mean(data[[v]], na.rm = TRUE) else 0
  }
  
  # Apply log1p if requested
  if (!is.null(transform)) {
    for (v in intersect(names(grid), fixed_vars)) {
      grid[[v]] <- suppressWarnings(log1p(pmax(grid[[v]], -1)))
    }
  }
  
  # Apply scaling if requested
  if (scale_vars) {
    for (v in intersect(names(grid), fixed_vars)) {
      mu <- mean(data[[v]], na.rm = TRUE)
      sd_ <- sd(data[[v]], na.rm = TRUE)
      grid[[v]] <- (grid[[v]] - mu) / sd_
    }
  }
  
  # Add ID column if model includes random intercept
  if ("ID" %in% names(model@frame)) {
    grid$ID <- NA
  }
  
  # Predict
  grid$pred <- tryCatch({
    predict(model, newdata = grid, type = "response", re.form = NA)
  }, error = function(e) {
    message("
Prediction failed: ", e$message)
    return(rep(NA, nrow(grid)))
  })
  
  # Check for prediction failure
  if (all(is.na(grid$pred))) {
    stop("Prediction failed or returned only NAs. Check model variables or transformation issues.")
  }
  
  # Return plot
  message("Prediction successful. Plotting...")
  
  return(
    ggplot(grid, aes_string(x = var1, y = var2, fill = "pred")) +
      geom_tile() +
      scale_fill_viridis_c(name = "P(Exacerbation)") +
      labs(
        title = paste("Predicted Risk:", var1, "×", var2),
        x = var1,
        y = var2
      ) +
      theme_minimal()
  )
}


a <- plot_interaction_heatmap(best_model, data_two, var1 = "EOS", var2 = "MONO",
                         transform = NULL,
                         scale_vars = FALSE,
                         other_fixed = "mean")

b <- plot_interaction_heatmap(best_model, data_two, var1 = "LYMPH", var2 = "MONO",
                              transform = NULL,
                              scale_vars = FALSE,
                              other_fixed = "mean")
c <- plot_interaction_heatmap(best_model, data_two, var1 = "BASO", var2 = "LYMPH",
                              transform = NULL,
                              scale_vars = FALSE,
                              other_fixed = "mean")

d <- plot_interaction_heatmap(best_model, data_two, var1 = "EOS", var2 = "NEUTS",
                              transform = NULL,
                              scale_vars = FALSE,
                              other_fixed = "mean")


library(egg)

grid.arrange(a, b, c, d, nrow = 2)
